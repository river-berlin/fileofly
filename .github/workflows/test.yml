name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    name: Node ${{ matrix.node-version }} Test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Lint
      run: |
        npm run lint
        npm run format -- --check
      
    - name: Run tests
      run: npm test

    - name: Generate coverage badges
      if: github.ref == 'refs/heads/main' && matrix.node-version == '20.x'
      run: |
        npm install -g jest-coverage-badges
        jest-coverage-badges --output ./coverage/badges

    - name: Update README with coverage
      if: github.ref == 'refs/heads/main' && matrix.node-version == '20.x'
      run: |
        # Get coverage percentages
        COVERAGE=$(cat coverage/coverage-summary.json)
        STATEMENTS=$(echo $COVERAGE | jq -r '.total.statements.pct')
        BRANCHES=$(echo $COVERAGE | jq -r '.total.branches.pct')
        FUNCTIONS=$(echo $COVERAGE | jq -r '.total.functions.pct')
        LINES=$(echo $COVERAGE | jq -r '.total.lines.pct')
        
        # Update README.md with coverage badges
        sed -i '/<!-- coverage-start -->/,/<!-- coverage-end -->/c\<!-- coverage-start -->\n![Statements](coverage/badges/badge-statements.svg)\n![Branches](coverage/badges/badge-branches.svg)\n![Functions](coverage/badges/badge-functions.svg)\n![Lines](coverage/badges/badge-lines.svg)\n<!-- coverage-end -->' README.md

    - name: Commit coverage results
      if: github.ref == 'refs/heads/main' && matrix.node-version == '20.x'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add coverage/badges README.md
        git commit -m "docs: update coverage badges [skip ci]" || echo "No changes to commit"
        git push 
{
    "name": "fileofy",
    "version": "1.0.1",
    "description": "AI-powered file modification library using Gemini",
    "main": "dist/index.js",
    "types": "dist/index.d.ts",
    "type": "module",
    "files": [
        "dist"
    ],
    "scripts": {
        "build": "tsup src/index.ts --dts --format esm,cjs",
        "prepublishOnly": "npm run build",
        "test": "jest --coverage",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "format": "prettier --write \"src/**/*.ts\""
    },
    "keywords": [
        "ai",
        "file-modification",
        "gemini",
        "typescript"
    ],
    "author": "Aditya Shankar",
    "license": "MIT",
    "repository": {
        "type": "git",
        "url": "git+https://github.com/river-berlin/fileofy.git"
    },
    "dependencies": {
        "@google/generative-ai": "^0.21.0",
        "dotenv": "^16.4.7",
        "jest": "^29.7.0",
        "mock-fs": "^5.4.1"
    },
    "devDependencies": {
        "@types/jest": "^29.5.14",
        "@types/mock-fs": "^4.13.4",
        "@types/node": "^20.17.10",
        "@typescript-eslint/eslint-plugin": "^7.1.0",
        "@typescript-eslint/parser": "^7.1.0",
        "eslint": "^8.57.0",
        "eslint-config-prettier": "^9.1.0",
        "eslint-plugin-prettier": "^5.1.3",
        "jest-message-util": "^29.7.0",
        "prettier": "^3.2.5",
        "ts-jest": "^29.2.5",
        "ts-node": "^10.9.2",
        "tsup": "^8.0.2",
        "tsx": "^4.19.2",
        "typescript": "^5.7.2"
    },
    "jest": {
        "preset": "ts-jest",
        "testEnvironment": "node",
        "extensionsToTreatAsEsm": [
            ".ts"
        ],
        "moduleNameMapper": {
            "^(\\.{1,2}/.*)\\.js$": "$1"
        },
        "transform": {
            "^.+\\.tsx?$": [
                "ts-jest",
                {
                    "useESM": true,
                    "tsconfig": {
                        "target": "es2022",
                        "module": "nodenext"
                    }
                }
            ]
        },
        "coverageThreshold": {
            "global": {
                "branches": 100,
                "functions": 100,
                "lines": 100,
                "statements": 100
            }
        },
        "collectCoverageFrom": [
            "src/**/*.{js,ts}",
            "!src/**/*.d.ts",
            "!src/**/*.test.{js,ts}",
            "!src/**/__tests__/**"
        ],
        "coverageReporters": [
            "json-summary",
            "json",
            "lcov",
            "text"
        ]
    }
}
